--rodar como usuário system
GRANT CREATE VIEW TO BSBIOS;
GRANT CREATE PROCEDURE TO BSBIOS;



--CRIAÇÃO DA TABELA MUNICIPIO (INICIO)
CREATE TABLE MUNICIPIO 
(
  CODIGO VARCHAR2(7 BYTE) NOT NULL 
, NOME VARCHAR2(50 CHAR) NOT NULL 
, UF VARCHAR2(2 BYTE) NOT NULL
, CONSTRAINT PK_MUNICIPIO PRIMARY KEY 
  (
    CODIGO 
  )
  ENABLE 
);

CREATE INDEX IDX_MUNICIPIO_NOME ON MUNICIPIO (NOME);
--CRIAÇÃO DA TABELA MUNICIPIO (FIM)

--ALTERACAO NA TABELA PROCESSOCOTACAOFRETE (INICIO)
ALTER TABLE PROCESSOCOTACAOFRETE ADD "CADENCIA" NUMBER(13,3);
ALTER TABLE PROCESSOCOTACAOFRETE ADD "CLASSIFICACAO" NUMBER(1,0) DEFAULT 0;
ALTER TABLE PROCESSOCOTACAOFRETE ADD "CODIGOFORNECEDOR" VARCHAR2(10 BYTE);
ALTER TABLE PROCESSOCOTACAOFRETE ADD "CODIGOMUNICIPIOORIGEM" VARCHAR2(7 BYTE);
ALTER TABLE PROCESSOCOTACAOFRETE ADD "CODIGOMUNICIPIODESTINO" VARCHAR2(7 BYTE);
ALTER TABLE PROCESSOCOTACAOFRETE ADD CODIGODEPOSITO VARCHAR2(10 BYTE);

ALTER TABLE PROCESSOCOTACAOFRETE ADD CONSTRAINT "FK_COTACAOFRETE_FORNECEDOR" FOREIGN KEY ("CODIGOFORNECEDOR")
	  REFERENCES "FORNECEDOR" ("CODIGO") ENABLE;
ALTER TABLE PROCESSOCOTACAOFRETE ADD CONSTRAINT "FK_COTACAOFRETE_MUNDESTINO" FOREIGN KEY ("CODIGOMUNICIPIODESTINO")
	  REFERENCES "MUNICIPIO" ("CODIGO") ENABLE; 
ALTER TABLE PROCESSOCOTACAOFRETE ADD CONSTRAINT "FK_COTACAOFRETE_MUNORIGEM" FOREIGN KEY ("CODIGOMUNICIPIOORIGEM")
	  REFERENCES "MUNICIPIO" ("CODIGO") ENABLE;
	  
ALTER TABLE PROCESSOCOTACAOFRETE ADD CONSTRAINT "FK_COTACAOFRETE_DEPOSITO" FOREIGN KEY ("CODIGODEPOSITO")
	  REFERENCES "FORNECEDOR" ("CODIGO") ENABLE;

ALTER TABLE COTACAOFRETE ADD "CADENCIA" NUMBER(13,3);

UPDATE COTACAOFRETE SET CADENCIA = 0
WHERE EXISTS(
SELECT 1
FROM COTACAO C 
WHERE COTACAOFRETE.ID = C.ID
AND SELECIONADA = 1)
AND CADENCIA IS NULL;

COMMIT;	  
	  
--ALTERACAO NA TABELA PROCESSOCOTACAOFRETE (FIM)	  

--CRIAÇAO DA TABELA ORDEMDETRANSPORTE (INICIO)
CREATE TABLE ORDEMDETRANSPORTE 
(
  ID NUMBER NOT NULL 
, CODIGOFORNECEDOR VARCHAR2(10 BYTE) NOT NULL 
, IDPROCESSOCOTACAOFRETE NUMBER NOT NULL 
, QUANTIDADEADQUIRIDA NUMBER(13, 3) NOT NULL 
, QUANTIDADELIBERADA NUMBER(13, 3) NOT NULL 
, QUANTIDADECOLETADA NUMBER(13, 3) NOT NULL 
, QUANTIDADEREALIZADA NUMBER(13, 3) NOT NULL
, PRECOUNITARIO NUMBER(13, 2) NOT NULL
, QUANTIDADEDETOLERANCIA NUMBER(13, 3) NOT NULL
, CADENCIA NUMBER(13,3) NOT NULL
, CONSTRAINT PK_ORDEMDETRANSPORTE PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

ALTER TABLE ORDEMDETRANSPORTE
ADD CONSTRAINT FK_ORDEM_FORNECEDOR FOREIGN KEY
(
  CODIGOFORNECEDOR 
)
REFERENCES FORNECEDOR
(
  CODIGO 
)
ENABLE;

ALTER TABLE ORDEMDETRANSPORTE
ADD CONSTRAINT FK_ORDEM_PROCESSOCOTACAOFRETE FOREIGN KEY
(
  IDPROCESSOCOTACAOFRETE 
)
REFERENCES PROCESSOCOTACAOFRETE
(
  ID 
)
ENABLE;

CREATE SEQUENCE ORDEMDETRANSPORTE_ID_SEQUENCE  INCREMENT BY 1 START WITH 1;

--CRIAÇAO DA TABELA ORDEMDETRANSPORTE (FIM)

--ALTERAÇÃO DA TABELA FORNECEDOR (INICIO)
ALTER TABLE FORNECEDOR 
ADD (ENDERECO VARCHAR2(250 CHAR) );
--ALTERAÇÃO DA TABELA FORNECEDOR (FIM)	  

ALTER TABLE USUARIOPERFIL 
DROP CONSTRAINT CHK_USUARIOPERFIL_PERFIL;

ALTER TABLE USUARIOPERFIL
ADD CONSTRAINT CHK_USUARIOPERFIL_PERFIL CHECK 
(PERFIL BETWEEN 1 AND 8)
ENABLE;

CREATE TABLE COLETA 
(
  ID NUMBER NOT NULL 
, REALIZADO NUMBER(1, 0) NOT NULL 
, PLACA VARCHAR2(8 CHAR) NOT NULL 
, MOTORISTA VARCHAR2(35 CHAR) NOT NULL 
, DATADACOLETA DATE NOT NULL 
, DATADEPREVISAODECHEGADA DATE NOT NULL 
, PESO NUMBER(13, 3) NOT NULL 
, VALORDOFRETE NUMBER(13, 2) NOT NULL 
, IDORDEMTRANSPORTE NUMBER NOT NULL 
, CONSTRAINT PK_COLETA PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

ALTER TABLE COLETA
ADD CONSTRAINT FK_COLETA_ORDEMTRANSPORTE FOREIGN KEY
(
  IDORDEMTRANSPORTE 
)
REFERENCES ORDEMDETRANSPORTE
(
  ID 
)
ENABLE;

CREATE SEQUENCE COLETA_ID_SEQUENCE  INCREMENT BY 1 START WITH 1;

CREATE TABLE NOTAFISCALDECOLETA 
(
  ID NUMBER NOT NULL 
, NUMERO VARCHAR2(9 BYTE) NOT NULL 
, SERIE VARCHAR2(3 CHAR) NOT NULL 
, NUMERODOCONHECIMENTO VARCHAR2(9 BYTE) NOT NULL
, DATAEMISSAO DATE NOT NULL 
, NUMEROCONTRATO VARCHAR2(20 CHAR) 
, PESO NUMBER(13, 3) NOT NULL 
, VALOR NUMBER(13, 2) NOT NULL 
, IDCOLETA NUMBER NOT NULL 
, CONSTRAINT PK_NOTAFISCALDECOLETA PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

ALTER TABLE NOTAFISCALDECOLETA
ADD CONSTRAINT FK_NOTA_COLETA FOREIGN KEY
(
  IDCOLETA 
)
REFERENCES COLETA
(
  ID 
)
ENABLE;

CREATE SEQUENCE NOTAFISCALDECOLETA_ID_SEQUENCE  INCREMENT BY 1 START WITH 1;


--criação da view (inicio)

CREATE VIEW AGENDAMENTODECARGAVISUALIZACAO AS
--DADOS DO AGENDAMENTO DE DESCARREGAMENTO
SELECT 'DESC' || IDQUOTA || AC.ID || NF.NUMERO AS ID, IDQUOTA, AC.ID AS IDAGENDAMENTO, NULL AS IDORDEMTRANSPORTE, NULL AS IDCOLETA, 'Soja' AS DESCRICAOMATERIAL, 'Descarregamento' AS DESCRICAOFLUXO, 
Q.DATA AS DATAAGENDAMENTO, PLACA,NF.NUMERO AS NUMERONF, CNPJEMITENTE, NOMEEMITENTE, AC.REALIZADO, Q.CODIGOTERMINAL, NULL AS CODIGODEPOSITO
FROM agendamentodedescarregamento AD INNER JOIN AGENDAMENTODECARGA AC ON AD.ID = AC.ID
INNER JOIN QUOTA Q ON AC.IDQUOTA = Q.ID
INNER JOIN notafiscal NF ON AD.ID = NF.IDAGENDAMENTODESCARREGAMENTO

UNION ALL

--DADOS DO AGENDAMENTO DE CARREGAMENTO
SELECT 'DESC' || IDQUOTA || AC.ID AS ID, IDQUOTA, AC.ID AS IDAGENDAMENTO, NULL AS IDORDEMTRANSPORTE, NULL AS IDCOLETA, 'Farelo' AS DESCRICAOMATERIAL, 'Carregamento' AS DESCRICAOFLUXO, 
Q.DATA AS DATAAGENDAMENTO, PLACA,NULL AS NUMERONF, NULL AS CNPJEMITENTE, NULL AS NOMEEMITENTE, AC.REALIZADO, Q.CODIGOTERMINAL, NULL AS CODIGODEPOSITO
FROM agendamentodecarregamento AD INNER JOIN AGENDAMENTODECARGA AC ON AD.ID = AC.ID
INNER JOIN QUOTA Q ON AC.IDQUOTA = Q.ID

UNION ALL

--DADOS DA COLETA
SELECT 'COLETA' || IDORDEMTRANSPORTE || C.ID || NFC.NUMERO AS ID, NULL AS IDQUOTA, NULL AS IDAGENDAMENTO, IDORDEMTRANSPORTE,C.ID AS IDCOLETA, P.DESCRICAO AS  DESCRICAOMATERIAL, 
'Descarregamento' AS DESCRICAOFLUXO, C.DATADEPREVISAODECHEGADA AS DATAAGENDAMENTO, C.PLACA, NFC.NUMERO AS NUMERONF,
FM.CNPJ AS CNPJEMITENTE, FM.NOME AS NOMEEMITENTE, C.REALIZADO,'1000' AS CODIGOTERMINAL,PF.CODIGODEPOSITO

FROM COLETA C INNER JOIN ORDEMDETRANSPORTE OT ON C.IDORDEMTRANSPORTE = OT.ID
INNER JOIN NOTAFISCALDECOLETA NFC ON NFC.IDCOLETA = C.ID
INNER JOIN PROCESSOCOTACAOFRETE PF ON OT.IDPROCESSOCOTACAOFRETE = PF.ID
INNER JOIN PROCESSOCOTACAO PC ON PF.ID = PC.ID
INNER JOIN PRODUTO P ON PC.CODIGOPRODUTO = P.CODIGO
LEFT JOIN FORNECEDOR FM ON PF.CODIGOFORNECEDOR = FM.CODIGO;



--criação da view (fim)
CREATE OR REPLACE PROCEDURE MONITORDEORDEMDETRANSPORTE (p_cursor OUT SYS_REFCURSOR,p_dataInicial DATE, p_dataFinal DATE) AS

BEGIN
    
    open p_cursor FOR
    SELECT sys_guid() || '' as "Id", Fornecedor AS "Fornecedor",  Material AS "Material"
    , sum(QuantidadeLiberada) as "QuantidadeLiberada", 
    sum(QuantidadeEmTransito) AS "QuantidadeEmTransito",
    sum(QuantidadePendente) as "QuantidadePendente",
    sum(PrevisaoDeChegadaNoDia) as "PrevisaoDeChegadaNoDia"
    FROM
    (
      SELECT f.Nome as Fornecedor, p.Descricao as Material, ot.QuantidadeLiberada, ot.QuantidadeColetada - ot.QuantidadeRealizada AS QuantidadeEmTransito,
      ot.QuantidadeLiberada - ot.QuantidadeColetada as QuantidadePendente,
      COALESCE((SELECT sum(c.Peso) FROM Coleta c WHERE ot.Id = c.IdOrdemTransporte AND c.DataDePrevisaoDeChegada = sysdate),0) as PrevisaoDeChegadaNoDia 
      FROM ORDEMDETRANSPORTE ot inner join Fornecedor f 
      on ot.CODIGOFORNECEDOR=f.Codigo 
      inner join ProcessoCotacaoFrete pcf on ot.IDPROCESSOCOTACAOFRETE=pcf.Id inner join ProcessoCotacao pc on pcf.Id=pc.Id 
      inner join Produto p on pc.CodigoProduto=p.Codigo 
      WHERE (pcf.DataValidadeFinal >= p_dataInicial and pcf.DataValidadeInicial <= p_dataFinal)
    )
    GROUP BY Fornecedor, Material;
 
END;

/
	  