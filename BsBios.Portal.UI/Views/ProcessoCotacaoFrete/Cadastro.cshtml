@using BsBios.Portal.UI.Helpers
@using BsBios.Portal.ViewModel
@model ProcessoCotacaoFreteCadastroVm

@{
    ViewBag.TituloDaPagina = "Cotação de Frete - Novo";
}
<style>
    .colunaTelaInteira {
        width: 790px;
    }
</style>
<div class="paginaCadastro">
    @using (Html.BeginForm()) {

        <fieldset>
            <legend>Processo de Cotação</legend>

            @Html.HiddenFor(model => model.Id)
            
            <div>
                @Html.Label("Status:",new{@class="labelNaLinha"})
                @Html.Display(Model != null ? Model.DescricaoStatus : "Não Iniciado")
            </div>

            
            <div class="linha">
                @Html.HiddenFor(x => x.CodigoMaterial)
                @Html.LabelFor(x => x.DescricaoMaterial)
                @Html.TextBoxFor(x => x.DescricaoMaterial,new{@readonly=true,@class="campoextragrande campoDesabilitado"})
                <input type="button" id="btnSelecionarProduto" class="button_visualize" />        
                @Html.ValidationMessageFor(x => x.DescricaoMaterial)
            </div>
            @{ var comboUnidadeDeMedida = new ColunaComDropDown<ProcessoCotacaoFreteCadastroVm, string>(x => x.CodigoUnidadeMedida, 
                ((List<UnidadeDeMedidaCadastroVm>) ViewBag.UnidadesDeMedida)
                .Select(x => new SelectListItem() {Text = x.Descricao, Value = Convert.ToString(x.CodigoInterno), Selected = Model != null && x.CodigoInterno == Model.CodigoUnidadeMedida}),
                "CodigoUnidadeMedida");

               var quantidadeMaterial = new ColunaComEditor<ProcessoCotacaoFreteCadastroVm, decimal>(x => x.QuantidadeMaterial);
            }
            
            @Html.LinhaComDuasColunas(quantidadeMaterial,comboUnidadeDeMedida)
            
            @Html.LinhaComUmaColuna(new ColunaComTextBox<ProcessoCotacaoFreteCadastroVm, string>(x => x.DataLimiteRetorno, "campoDatePicker"))
            
            @Html.LinhaComDuasColunas(new ColunaComTextBox<ProcessoCotacaoFreteCadastroVm, string>(x => x.DataValidadeCotacaoInicial, "campoDatePicker"),
            new ColunaComTextBox<ProcessoCotacaoFreteCadastroVm, string>(x => x.DataValidadeCotacaoFinal, "campoDatePicker"))        

            <div class="linha">
                @Html.HiddenFor(x => x.CodigoItinerario)
                @Html.LabelFor(x => x.DescricaoItinerario)
                @Html.TextBoxFor(x => x.DescricaoItinerario,new{@readonly=true,@class="campoextragrande campoDesabilitado"})
                <input type="button"  id="btnSelecionarItinerario" class="button_visualize" />        
                @Html.ValidationMessageFor(x => x.DescricaoItinerario)
            </div>

            @Html.LinhaComDuasColunas(new ColunaComTextBox<ProcessoCotacaoFreteCadastroVm, string>(x => x.NumeroDoContrato,"campomedio"), 
            new ColunaComTextArea<ProcessoCotacaoFreteCadastroVm, string>(x => x.Requisitos))

            @Html.ValidationSummary(true)
        <div class="error"></div>
        <div class="divBotao">
            <input type="button" id="btnSalvar" value="Salvar" class="blue" />
        </div>
        </fieldset>
    }
    @Html.Partial("_ProcessoDeCotacaoOperacoes", new ViewDataDictionary() { new KeyValuePair<string, object>("idProcessoCotacao", Model != null ? Model.Id : 0) })
    <div id="divSelecionarProduto"></div>
    <div id="divSelecionarItinerario"></div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/kendo/2012.3.1114/kendo.web.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2012.3.1114/kendo.grid.min.js")"></script>

    <script type="text/javascript">
        $(function () {
            
            function atualizaMensagemDeErro(mensagem) {
                $('.error').html(mensagem);
            }

            $('#divSelecionarProduto').dialog({
                autoOpen: false,
                width: 800,
                resizable: false,
                title: 'Selecionar Produto',
                modal: true,
                buttons: {
                    "Confirmar": function () {
                        if (produtoSelecionado == null) {
                            Mensagem.ExibirMensagemDeErro("É necessário selecionar um Produto.");
                            return;
                        }
                        $('#CodigoMaterial').val(produtoSelecionado.Codigo);
                        $('#DescricaoMaterial').val(unescape(produtoSelecionado.Descricao));
                        $(this).dialog("close");
                    },
                    "Cancelar": function () {
                        $(this).dialog("close");
                    }
                }
            });

            $('#divSelecionarItinerario').dialog({
                autoOpen: false,
                width: 800,
                resizable: false,
                title: 'Selecionar Itinerário',
                modal: true,
                buttons: {
                    "Confirmar": function () {
                        if (itinerarioSelecionado == null) {
                            Mensagem.ExibirMensagemDeErro("É necessário selecionar um Itinerário.");
                            return;
                        }
                        $('#CodigoItinerario').val(itinerarioSelecionado.Codigo);
                        $('#DescricaoItinerario').val(unescape(itinerarioSelecionado.Descricao));
                        $(this).dialog("close");

                    },
                    "Cancelar": function () {
                        $(this).dialog("close");
                    }
                }
            });

            $('#btnSelecionarProduto').click(function () {
                $('#divSelecionarProduto').load('@Url.Action("SelecionarProduto")'
                    + '/?Codigo=' + $('#CodigoMaterial').val() + '&Descricao=' + escape($('#DescricaoMaterial').val()),
                function (response, status, xhr) {
                    $('#divSelecionarProduto').dialog('open');
                });
            });
            
            $('#btnSelecionarItinerario').click(function () {
                $('#divSelecionarItinerario').load("@Url.Action("SelecionarItinerario")"
                + '/?Codigo=' + $('#CodigoItinerario').val() + '&Descricao=' + escape($('#DescricaoItinerario').val()),
                function (response, status, xhr) {
                    $('#divSelecionarItinerario').dialog('open');
                });
            });
            
            $('#btnSalvar').click(function () {
                $('.error').empty();
                var form = $('form');
                if (!$(form).validate().form()) {
                    return;
                }

                var formData = $(form).serialize();
                $.post('@Url.Action("Salvar","ProcessoDeCotacaoDeFreteService" )', formData,
                    function (data) {
                        if (data.Sucesso) {
                            location.href = '@Url.Action("Index","ProcessoCotacaoFrete")';
                        } else {
                            atualizaMensagemDeErro(data.Mensagem);
                        }
                    });

            });


        })
        

    </script>
}
