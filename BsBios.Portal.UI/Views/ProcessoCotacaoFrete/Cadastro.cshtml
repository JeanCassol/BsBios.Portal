@using BsBios.Portal.UI.Helpers
@using BsBios.Portal.ViewModel
@model ProcessoCotacaoFreteCadastroVm

@{
    ViewBag.TituloDaPagina = "Cotação de Frete - Novo";
}
<div class="paginaCadastro">
    @using (Html.BeginForm()) {

        <fieldset>
            <legend></legend>

            @Html.HiddenFor(model => model.Id)
            
            <div>
                @Html.Label("Status:",new{@class="labelNaLinha"})
                @Html.Display(Model != null ? Model.DescricaoStatus : "Não Iniciado")
            </div>

            
            <div class="linha">
@*                <div class="coluna">*@
                    @Html.HiddenFor(x => x.CodigoMaterial)
                    @Html.LabelFor(x => x.DescricaoMaterial)
                    @Html.TextBoxFor(x => x.DescricaoMaterial,new{@readonly=true,@class="campoextragrande campoDesabilitado"})
                    @Html.ValidationMessageFor(x => x.DescricaoMaterial)
                    <input type="button" id="btnSelecionarProduto" class="button_visualize" />        
@*                </div>*@
            </div>

            @{ var comboUnidadeDeMedida = new ColunaComDropDown<ProcessoCotacaoFreteCadastroVm, string>(x => x.CodigoUnidadeMedida, 
                ((List<UnidadeDeMedidaCadastroVm>) ViewBag.UnidadesDeMedida)
                .Select(x => new SelectListItem() {Text = x.Descricao, Value = Convert.ToString(x.CodigoInterno), Selected = Model != null && x.CodigoInterno == Model.CodigoUnidadeMedida}),
                "CodigoUnidadeMedida");

               var quantidadeMaterial = new ColunaComEditor<ProcessoCotacaoFreteCadastroVm, int>(x => x.QuantidadeMaterial);
            }
            
            @Html.LinhaComDuasColunas(quantidadeMaterial,comboUnidadeDeMedida)
            
            @Html.LinhaComUmaColuna(new ColunaComTextBox<ProcessoCotacaoFreteCadastroVm, string>(x => x.DataLimiteRetorno, "campoDatePicker"))
            
            @Html.LinhaComDuasColunas(new ColunaComTextBox<ProcessoCotacaoFreteCadastroVm, string>(x => x.DataValidadeCotacaoInicial, "campoDatePicker"),
            new ColunaComTextBox<ProcessoCotacaoFreteCadastroVm, string>(x => x.DataValidadeCotacaoFinal, "campoDatePicker"))        

            <div class="linha">
                <div class="coluna">
                    @Html.HiddenFor(x => x.CodigoItinerario)
                    @Html.LabelFor(x => x.DescricaoItinerario)
                    @Html.TextBoxFor(x => x.DescricaoItinerario,new{disabled=true})
                    @Html.ValidationMessageFor(x => x.DescricaoItinerario)
                    <input type="button"  id="btnSelecionarItinerario" class="button_visualize" />        
                </div>
            </div>
            

            @Html.LinhaComUmaColuna(new ColunaComTextArea<ProcessoCotacaoFreteCadastroVm, string>(x => x.Requisitos))

            @Html.ValidationSummary(true)

        <div class="divBotao">
            <input type="submit" value="Salvar" class="blue" />
        </div>
        </fieldset>
    }
    <div id="divSelecionarProduto"></div>
    <div id="divSelecionarItinerario"></div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            
            $('#divSelecionarProduto').dialog({
                autoOpen: false,
                width: 800,
                resizable: false,
                title: 'Selecionar Produto',
                modal: true,
                buttons: {
                    "Confirmar": function () {
                        if (produtoSelecionado == null) {
                            Mensagem.ExibirMensagemDeErro("É necessário selecionar um Produto.");
                            return;
                        }
                        $('#CodigoMaterial').val(produtoSelecionado.Codigo);
                        $('#DescricaoMaterial').val(produtoSelecionado.Descricao);
                        $(this).dialog("close");
                    },
                    "Cancelar": function () {
                        $(this).dialog("close");
                    }
                }
            });

            $('#divSelecionarItinerario').dialog({
                autoOpen: false,
                width: 800,
                resizable: false,
                title: 'Selecionar Itinerário',
                modal: true,
                buttons: {
                    "Confirmar": function () {

                    },
                    "Cancelar": function () {
                        $(this).dialog("close");
                    }
                }
            });

            $('#btnSelecionarProduto').click(function () {
                $('#divSelecionarProduto').load('@Url.Action("SelecionarProduto")'
                    + '/?Codigo=' + $('#CodigoMaterial').val() + '&Descricao=' + escape($('#DescricaoMaterial').val()),
                function (response, status, xhr) {
                    $('#divSelecionarProduto').dialog('open');
                });
            });
            
            $('#btnSelecionarItinerario').click(function () {
                $('#divSelecionarItinerario').load("@Url.Action("SelecionarItinerario")",
                function (response, status, xhr) {
                    $('#divSelecionarItinerario').dialog('open');
                });
            });

        })
        

    </script>
}
