@using BsBios.Portal.Common
@using BsBios.Portal.UI.Helpers
@using BsBios.Portal.ViewModel
@model ConferenciaDeCargaFiltroVm
@{
    ViewBag.TituloDaPagina = "Conferência de Cargas";
}
<link href="@Url.Content("~/Content/kendo/2012.3.1114/kendo.common.min.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/kendo/2012.3.1114/kendo.default.min.css")" rel="stylesheet" />


<fieldset>
    <legend>Filtros</legend>
    <form id="formularioDeFiltros">
        <div class="linha">
            <div class="coluna">
                @Html.Label("Terminal")
                @Html.TextBox("CodigoTerminal", "1000", new { @class = "campoDesabilitado", @readonly = true })
            </div>
            <div class="coluna">
                @Html.Label("Data de Agendamento")
                @Html.TextBox("DataAgendamento", DateTime.Now.Date.ToShortDateString(), new { @class = "campoDatePicker maskdata" })
            </div>
        </div>

        @Html.LinhaComDuasColunas(new ColunaComTextBox<ConferenciaDeCargaFiltroVm, string>(x => x.Placa, "campopequeno maskplaca"),
                new ColunaComTextBox<ConferenciaDeCargaFiltroVm, string>(x => x.NumeroNf, "campopequeno"))


        @{
            var realizacoesDeAgendamento = ((IList<RealizacaoDeAgendamentoVm>)ViewBag.RealizacoesDeAgendamento).Select(x =>
                new SelectListItem
                {
                    Value = Convert.ToString(x.Codigo),
                    Text = x.Descricao,
                    Selected = x.Padrao
                });
        }

        @Html.LinhaComDuasColunas(new ColunaComDropDown<ConferenciaDeCargaFiltroVm, int?>(x => x.RealizacaoDeAgendamento, realizacoesDeAgendamento, "RealizacaoDeAgendamento", "", "Todos"),
        new ColunaComTextBox<ConferenciaDeCargaFiltroVm, string>(x => x.NomeDoFornecedor, "campogrande"))

        <div class="divBotao">
            <input type="button" id="btnPesquisar" value="Pesquisar" class="blue" />
            <input type="reset" id="btnLimpar" value="Limpar" class="blue" />
        </div>
    </form>
</fieldset>
<fieldset>
    <legend>Agendamentos</legend>
    <div id="gridAgendamentos" class="divGrid" style="width: 785px"></div>
    <div id="divRealizarAgendamento" class="janelaModal"></div>
    <div id="divRealizarColeta" class="janelaModal"></div>
</fieldset>
@section scripts
{
    <script src="@Url.Content("~/Scripts/kendo/2012.3.1114/kendo.web.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2012.3.1114/kendo.grid.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.maskedinput.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.meio.mask.js")"></script>
    <script type="text/javascript">
        $(function() {
            aplicaMascaraData();
            aplicaMascaraPlaca();
            $("#gridAgendamentos").customKendoGrid({
                dataSource: {
                    schema: {
                        data: 'Registros',
                        model: {
                            fields: {
                                IdQuota: { type: "number" },
                                IdAgendamento: { type: "number" },
                                Data: { type: "string" },
                                DescricaoMaterial: { type: "string" },
                                DescricaoFluxo: { type: "string" },
                                Placa: { type: "string" },
                                NumeroNf: { type: "string" },
                                CnpjEmitente: { type: "string" }
                            }
                        },
                        total: 'QuantidadeDeRegistros'
                    },
                    serverFiltering: true,
                    serverPaging: true,
                    transport: {
                        read: {
                            url: '@Url.Action("Consultar", "AgendamentoDeCarga")',
                            type: 'GET',
                            cache: false,
                            data: function() {
                                return $('#formularioDeFiltros').serializeObject();                                    
                            }
                        }
                    }
                },
                columns:
                [
                    {
                        title: ' ', 
                        width: 30,
                        sortable: false,
                        template: '<input type="button" class="button_visualize"></input>'
                    },
                    {
                        width: 120,
                        title: 'Nº Agendamento / OT',
                        template: function(dataItem) {
                            return dataItem.IdAgendamento || dataItem.IdOrdemTransporte;
                        }
                    },
                    {
                        field: "DataDeAgendamentoFormatada",
                        title: "Data",
                        width: 70
                    },
                    {
                        field: "DescricaoFluxo",
                        title: 'Fluxo de Carga',
                        width: 100
                    },
                    {
                        field: "DescricaoMaterial",
                        title: 'Material',
                        width: 175
                    },
                    {
                        field: "Placa",
                        width: 65
                    },
                    {
                        field: "NumeroNf",
                        title: 'Número NF',
                        width: 70
                    },
                    {
                        field: "CnpjEmitente",
                        title: 'CNPJ do Emitente',
                        template: function(dataItem) {
                            return Formato.formataCnpj(dataItem.CnpjEmitente);
                        },
                        width: 125
                    }
                ]
            });

            $('#gridAgendamentos').off('click','.button_visualize');
            $('#gridAgendamentos').on('click','.button_visualize', function(e) {
                e.preventDefault();
                var grid = $('#gridAgendamentos').data("kendoGrid");
                var registroSelecionado = grid.obterRegistroSelecionado();
                
                var url = '';
                var divParaCarregarModal = '';
                if (registroSelecionado.IdQuota && registroSelecionado.IdAgendamento) {

                    url = '@Url.Action("RealizarAgendamento", "AgendamentoDeCarga")' +
                        '/?idQuota=' + registroSelecionado.IdQuota + '&idAgendamento=' + registroSelecionado.IdAgendamento;
                    divParaCarregarModal = '#divRealizarAgendamento';

                } else if (registroSelecionado.IdOrdemTransporte && registroSelecionado.IdColeta) {

                    url = '@Url.Action("RealizarColeta", "OrdemDeTransporte")' +
                        '/?idDaOrdemDeTransporte=' + registroSelecionado.IdOrdemTransporte + '&idDaColeta=' + registroSelecionado.IdColeta;
                    
                    divParaCarregarModal = '#divRealizarColeta';

                }

                if (!url) {
                    Mensagem.ExibirMensagemDeErro('Ocorreu um erro ao consultar o registro selecionado.');
                    return;
                }
                
                $(divParaCarregarModal).customLoad(url);

            });

            function atualizaGrid() {
                var grid = $('#gridAgendamentos').data("kendoGrid");
                grid.dataSource.read();
            }

            $('#divRealizarAgendamento').customDialog({
                title: 'Realizar Agendamento',
                buttons: {
                    "Realizar": function () {
                        Mensagem.ExibirMensagemDeConfirmacao("Confirma a realização do evento?", function() {
                            $.ajax({
                                url: '@Url.Action("Realizar", "AgendamentoDeCargaService")',
                                type: 'POST',
                                data: JSON.stringify(
                                    {
                                        IdQuota: $('#IdQuota').val(),
                                        IdAgendamento: $('#IdAgendamento').val()
                                    }),
                                cache: false,
                                contentType: "application/json; charset=utf-8",
                                dataType: 'json',
                                success: function(data) {
                                    if (data.Sucesso) {
                                        atualizaGrid();
                                        $('#divRealizarAgendamento').dialog("close");
                                    } else {
                                        Mensagem.ExibirMensagemDeErro(data.Mensagem);
                                    }
                                },
                                error: function(jqXHR, textStatus, errorThrown) {
                                    Mensagem.ExibirMensagemDeErro('Ocorreu um erro ao realizar o Agendamento. Detalhe: ' + textStatus + errorThrown);
                                }
                            });

                        });

                    },
                    "Cancelar": function() {
                        $(this).dialog("close");
                    }
                }
            });
            
            $('#divRealizarColeta').customDialog({
                title: 'Realizar Coleta',
                buttons: {
                    "Realizar": function () {

                        var dado = {
                            idDaOrdemDeTransporte: $('#IdDaOrdemDeTransporte').val(),
                            idDaColeta: $('#IdColeta').val()
                        };

                        Mensagem.ExibirMensagemDeConfirmacao("Confirma a realização da Coleta?", function() {
                            $.ajax({
                                url: '@Url.Action("RealizarColeta", "OrdemDeTransporteService")',
                                type: 'POST',
                                data: JSON.stringify(dado),
                                cache: false,
                                contentType: "application/json; charset=utf-8",
                                dataType: 'json',
                                success: function (data) {
                                    if (data.Sucesso) {
                                        atualizaGrid();
                                        $('#divRealizarColeta').dialog("close");
                                    } else {
                                        Mensagem.ExibirMensagemDeErro(data.Mensagem);
                                    }
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    Mensagem.ExibirMensagemDeErro('Ocorreu um erro ao realizar a Coleta. Detalhe: ' + textStatus + errorThrown);
                                }
                            });

                        });

                    },
                    "Cancelar": function () {
                        $(this).dialog("close");
                    }
                }
            });

        })

    </script>
}


