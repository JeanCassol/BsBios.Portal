@{
    ViewBag.TituloDaPagina = "Eficiência de Negociação";
}
@section styles
{
    <link href="@Url.Content("~/Content/kendo/2012.3.1114/kendo.common.min.css")" rel="stylesheet" media="all" />
    <link href="@Url.Content("~/Content/kendo/2012.3.1114/kendo.default.min.css")" rel="stylesheet" media="all" />
}
<fieldset>
    <legend>Filtros</legend>
    <form>
        @Html.Partial("_Filtro")
        <div class="divBotao">
            <input type="button" id="btnCalcular" value="Calcular" class="blue" />
        </div>
    </form>
</fieldset>
<div id="gridEficienciaDeNegociacao" class="divGrid" data-autobind="false"></div>
@section scripts
{
    <script src="@Url.Content("~/Scripts/kendo/2012.3.1114/kendo.web.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2012.3.1114/kendo.grid.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.maskedinput.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Shared/SelecionarComprador.js")"></script>
    <script type="text/javascript">
        $(function () {
            aplicaMascaraData();
            SelecionarComprador.ConfigurarJanelaModal();

            $("#gridEficienciaDeNegociacao").customKendoGrid({
                autoBind:false,
                dataSource: {
                    schema: {
                        data: 'Registros',
                        model: {
                            fields: {
                                NumeroDaRequisicao: { type: "string" },
                                NumeroDoItem: { type: "string" },
                                Produto: { type: "string" },
                                PercentualDeEficiencia: { type: "number" },
                                ValorDaEficiencia: { type: "number" }
                            }
                        },
                        total: 'QuantidadeDeRegistros'
                    },
                    transport: {
                        read: {
                            url: '@Url.Action("CalcularResumo", "EficienciaDeNegociacao")',
                            type: 'GET',
                            cache: false,
                            data: function () {
                                return {
                                    DataDeFechamentoInicial: $('#DataDeFechamentoInicial').val(),
                                    DataDeFechamentoFinal: $('#DataDeFechamentoFinal').val(),
                                    LoginComprador: $('#LoginComprador').val()
                                };
                            }
                        }
                    }
                },
                columns: [{ field: "NumeroDaRequisicao", title: "Requisição" },
                { field: "NumeroDoItem", title: "Item" },
                { field: "Produto", title: "Produto/Serviço" },
                { field: "PercentualDeEficiencia", title: "Eficiência (%)", format: "{0:n2}" },
                { field: "ValorDaEficiencia", title: "Eficiência (R$)", format: "{0:n2}"}],
                detailTemplate: '<div class="divGrid"></div>',
                detailInit: detailInit
            });
            
            function detailInit(e) {

                $.ajax({
                    url: '@Url.Action("ListarColunas","EficienciaDeNegociacao")' +
                    '/?numeroDaRequisicao=' + e.data.NumeroDaRequisicao +
                    '&numeroDoItem=' + e.data.NumeroDoItem,
                    type: 'GET',
                    cache: false,
                    dataType: 'json',
                    success: function (data) {
                        //if (!data.Sucesso) {
                        //    Mensagem.ExibirMensagemDeErro('Ocorreu um erro ao consultar os fornecedores do Processo de Cotação. Detalhe: ' + data.Mensagem);
                        //    return;
                        //}
                        var arrayDeColunas = [{ field: "Fornecedor" }];
                        var arrayDeFields = new Array();
                        arrayDeFields["Fornecedor"] = { type: "string" };
                        $.each(data.Colunas, function(indice, coluna) {
                            arrayDeColunas.push({ field: coluna, format: "{0:n2}" });
                            arrayDeFields[coluna] = { type: "number"};
                        });
                        
                        e.detailRow.find('.divGrid').customKendoGrid({
                            dataSource: {
                                schema: {
                                    data: 'Registros',
                                    model: {
                                        fields: arrayDeFields
                                    },
                                    total: 'QuantidadeDeRegistros'
                                },
                                transport: {
                                    read: {
                                        dataType:'json',
                                        url: '@Url.Action("CalcularDetalhe","EficienciaDeNegociacao")' + 
                                        '/?numeroDaRequisicao=' + e.data.NumeroDaRequisicao +
                                        '&numeroDoItem=' + e.data.NumeroDoItem,
                                        type: 'GET',
                                        cache: false
                                    }
                                }
                            },
                            columns: arrayDeColunas,
                            pageable:false
                        });

                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        Mensagem.ExibirMensagemDeErro('Ocorreu um erro ao consultar os fornecedores do Processo de Cotação. Detalhe: ' + textStatus + errorThrown);
                    }
                });
            }
            
            $('#btnCalcular').click(function (e) {
                var grid = $("#gridEficienciaDeNegociacao").data("kendoGrid");
                grid.bind("dataBound", function (event) {
                    /*esconde o ícone de mostrar detalhes da última linha, pois esta linha é sempre um total e não precisa ser expandida*/
                    var ultimaLinha = this.tbody.find("tr.k-master-row:last");
                    ultimaLinha.find('.k-plus').hide();
                    ultimaLinha.addClass('labelTotal');
                });
                grid.dataSource.fetch();
            });
        })
    </script>
}

