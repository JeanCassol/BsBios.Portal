@using BsBios.Portal.UI.Helpers
@using BsBios.Portal.ViewModel
@model AgendamentoDeDescarregamentoCadastroVm
@{
    Layout = null;
}
<div class="divFiltros">
    <fieldset >
        <legend>Agendamento de Descarregamento</legend>
        <form id="formAgendamento">
            @Html.HiddenFor(x => x.IdQuota)
            @Html.HiddenFor(x => x.IdAgendamento)
            @Html.LinhaComUmaColuna(new ColunaComEditor<AgendamentoDeDescarregamentoCadastroVm, string>(x => x.Placa))
        </form>
    </fieldset>
    <fieldset id="fieldSetNotaFiscal">
        <legend>Nota Fiscal</legend>
        <form id="formNotaFiscal">
            @Html.LinhaComDuasColunas(new ColunaComEditor<AgendamentoDeDescarregamentoCadastroVm, string>(x => x.NotaFiscal.Numero),
                                      new ColunaComEditor<AgendamentoDeDescarregamentoCadastroVm, string>(x => x.NotaFiscal.Serie))

            @Html.LinhaComUmaColuna(new ColunaComTextBox<AgendamentoDeDescarregamentoCadastroVm, string>(x => x.NotaFiscal.DataDeEmissao,Model.PermiteEditar ? "campoDatePicker":""))

            @Html.LinhaComDuasColunas(new ColunaComEditor<AgendamentoDeDescarregamentoCadastroVm, string>(x => x.NotaFiscal.CnpjDoEmitente),
                                      new ColunaComTextBox<AgendamentoDeDescarregamentoCadastroVm, string>(x => x.NotaFiscal.NomeDoEmitente,"campogrande"))

            @Html.LinhaComDuasColunas(new ColunaComEditor<AgendamentoDeDescarregamentoCadastroVm, string>(x => x.NotaFiscal.CnpjDoContratante),
                                      new ColunaComTextBox<AgendamentoDeDescarregamentoCadastroVm, string>(x => x.NotaFiscal.NomeDoContratante,"campogrande"))

            @Html.LinhaComUmaColuna(new ColunaComEditor<AgendamentoDeDescarregamentoCadastroVm, string>(x => x.NotaFiscal.NumeroDoContrato))

            @Html.LinhaComDuasColunas(new ColunaComEditor<AgendamentoDeDescarregamentoCadastroVm, decimal>(x => x.NotaFiscal.Valor),
                                      new ColunaComEditor<AgendamentoDeDescarregamentoCadastroVm, decimal>(x => x.NotaFiscal.Peso))
            
            @if (Model.PermiteEditar)
            {
                <div class="divBotao">
                    <input type="button" id="btnSalvarNotaFiscal" class="blue" value="Adicionar"/>
                    <input type="button" id="btnCancelarEdicao" value="Cancelar" @*style="visibility: hidden"*@ class="blue" />
                </div>
            }

        </form>
    </fieldset>
    <fieldset>
        <legend>Notas Fiscais adicionadas</legend>
        <div id="divGridNotasFiscaisAdicionadas" class="divGrid" style="width: 780px"></div>
    </fieldset>
    <div id="divErro" class="message-error"></div>
</div>
<script type="text/javascript" src="@Url.Content("~/Scripts/AgendamentoDeCarga/GridNotasFiscais.js")"></script>
<script type="text/javascript">
    inicializaCamposDatePicker();
    function limparCamposDaNota() {
        $('#fieldSetNotaFiscal').find('input[type!=button]').val('');
    }

    $(function () {
        $('#btnCancelarEdicao').hide();
        var permiteEditar = '@Model.PermiteEditar'.boolean();
        if (!permiteEditar) {
            $('form').find('input')
                .attr('readonly', true)
                .addClass('campoDesabilitado');
        }


        @if (Model.IdAgendamento > 0)
        {
            @: GridNotasFiscais.CarregarNotas('@Html.Raw(Url.Action("NotasFiscaisDoAgendamento", "Quota", new { Model.IdQuota, Model.IdAgendamento }))');
        }


        GridNotasFiscais.ConfigurarGrid({PermiteEditar: permiteEditar});
        $('#btnSalvarNotaFiscal').click(function() {
            var form = $('#formNotaFiscal');
            if (!$(form).validate().form()) {
                return;
            }

            var notaFiscal = {
                Numero: $('#NotaFiscal_Numero').val(),
                Serie: $('#NotaFiscal_Serie').val(),
                DataDeEmissao: $('#NotaFiscal_DataDeEmissao').val(),
                CnpjDoEmitente: $('#NotaFiscal_CnpjDoEmitente').val(),
                NomeDoEmitente: $('#NotaFiscal_NomeDoEmitente').val(),
                CnpjDoContratante: $('#NotaFiscal_CnpjDoContratante').val(),
                NomeDoContratante: $('#NotaFiscal_NomeDoContratante').val(),
                NumeroDoContrato: $('#NotaFiscal_NumeroDoContrato').val(),
                Valor: $('#NotaFiscal_Valor').val(),
                Peso: $('#NotaFiscal_Peso').val()
            };

            try {
                GridNotasFiscais.SalvarNotaFiscal(notaFiscal);
                limparCamposDaNota();
                $('#btnSalvarNotaFiscal').val('Adicionar');
                $('#btnCancelarEdicao').hide();
            } catch(err) {
                Mensagem.ExibirMensagemDeErro(err);
            }
        });

        if (!permiteEditar) {
            GridNotasFiscais.CarregarCamposParaPrimeiraNota();
        }

        $('#btnCancelarEdicao').click(function() {
            $('#btnSalvarNotaFiscal').val('Adicionar');
            limparCamposDaNota();
            $(this).hide();
        });

        $('#NotaFiscal_CnpjDoEmitente,#NotaFiscal_CnpjDoContratante').change(function() {
            var cnpj = $(this).val();
            cnpj = cnpj.replace(/[^\d]+/g, '');
            if (cnpj == '') {
                return;
            }
            var idCampoNome = "";
            if ($(this)[0].name.indexOf("Emitente") >= 0) {
                idCampoNome = "#NotaFiscal_NomeDoEmitente";
            }
            if ($(this)[0].name.indexOf("Contratante") >= 0) {
                idCampoNome = "#NotaFiscal_NomeDoContratante";
            }

            if (validarCNPJ(cnpj)) {
                $.ajax({
                    url: '@Url.Action("ConsultaPeloCnpj","Fornecedor")',
                    type: 'GET',
                    data: { Cnpj: cnpj},
                    cache: false,
                    dataType: 'json',
                    success: function (data) {
                        if (data.Sucesso) {
                            $(idCampoNome).val(data.Nome);
                        } else {
                            Mensagem.ExibirMensagemDeErro('Ocorreu um erro ao consultar o nome do fornecedor. Detalhe: ' + data.Mensagem);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        Mensagem.ExibirMensagemDeErro('Ocorreu um erro ao consultar o nome do fornecedor. Detalhe: ' + textStatus + errorThrown);
                    }
                });
            } else {
                Mensagem.ExibirMensagemDeErro("CNPJ inválido.");
                $(this).focus();
            }
        });
    });
</script>


