@using BsBios.Portal.UI.Helpers
@using BsBios.Portal.ViewModel
@model MonitorOrdemDeTransporteParametroVm
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>BS NET - Monitor de Ordens de Transporte</title>
        @Styles.Render("~/Content/monitor")
        </head>
    <body>
        <div id="todaPagina">
            <div id="showDiv" style="height: 0.5em"></div>
            <div class="configuracaoDoMonitor">
                <fieldset>
                    <legend>Configuração</legend>
                    @Html.LinhaComUmaColuna(new ColunaComTextBox<MonitorOrdemDeTransporteParametroVm, int>(x => x.InterValoDeAtualizacao, "campopequeno masknumerointeiro"))
                </fieldset>
                <form id="filtrosDoMonitor">

                    <fieldset class="divFiltros">
                        <legend>Agrupamentos</legend>
                        <div class="linha">
                            <div class="coluna">
                                @Html.CheckBox("FornecedorDaMercadoria")
                                @Html.Label("Fornecedor da Mercadoria", new { @class = "labelDeCheckbox" })
                            </div>
                            <div class="coluna">
                                @Html.CheckBox("NumeroDoContrato")
                                @Html.Label("Número do Contrato", new { @class = "labelDeCheckbox" })
                            </div>
                        </div>
                        <div class="linha">
                            <div class="coluna">
                                @Html.CheckBox("NumeroDaOrdemDeTransporte")
                                @Html.Label("Número da Ordem de Transporte", new { @class = "labelDeCheckbox" })
                            </div>
                            <div class="coluna">
                                @Html.CheckBox("MunicipioDeOrigem")
                                @Html.Label("Município de Origem", new { @class = "labelDeCheckbox" })
                            </div>
                        </div>
                        <div class="linha">
                            <div class="coluna">
                                @Html.CheckBox("MunicipioDeDestino")
                                @Html.Label("Município de Destino", new { @class = "labelDeCheckbox" })
                            </div>
                        </div>
                    </fieldset>

                    <fieldset>
                        <legend>Filtros</legend>
                        @Html.LinhaComDuasColunas(new ColunaComTextBox<MonitorOrdemDeTransporteParametroVm, string>
                            (x => x.CodigoDoMaterial, "campopequeno"),
                            new ColunaComTextBox<MonitorOrdemDeTransporteParametroVm, string>
                                (x => x.DescricaoDoMaterial, "campogrande"))
                        @Html.LinhaComDuasColunas(new ColunaComTextBox<MonitorOrdemDeTransporteParametroVm, string>
                            (x => x.CodigoDoFornecedorDaMercadoria, "campopequeno"),
                            new ColunaComTextBox<MonitorOrdemDeTransporteParametroVm, string>
                                (x => x.NomeDoFornecedorDaMercadoria, "campogrande"))
                        @Html.LinhaComDuasColunas(new ColunaComTextBox<MonitorOrdemDeTransporteParametroVm, string>
                            (x => x.CodigoDaTransportadora, "campopequeno"),
                            new ColunaComTextBox<MonitorOrdemDeTransporteParametroVm, string>
                                (x => x.NomeDaTransportadora, "campogrande"))

                        <div class="linha">
                            <div class="coluna">
                                @Html.HiddenFor(x => x.CodigoDoMunicipioDeOrigem)
                                @Html.LabelFor(x => x.CodigoDoMunicipioDeOrigem)
                                @Html.TextBox("NomeDoMunicipioDeOrigem", "", new { @class = "campogrande" })
                            </div>
                            <div class="coluna">
                                @Html.HiddenFor(x => x.CodigoDoMunicipioDeDestino)
                                @Html.LabelFor(x => x.CodigoDoMunicipioDeDestino)
                                @Html.TextBox("NomeDoMunicipioDeDestino", "", new { @class = "campogrande" })
                            </div>
                        </div>



                    </fieldset>
                    <div class="divBotao">
                        <button class="blue" id="btnAtualizarMateriais">Atualizar</button>
                        <button class="blue" id="btnOcultarConfiguracao">Ocultar</button>
                    </div>

                </form>
                
            </div>
            <table class="full_table_list">
                <thead>
                    <tr>
                        <th class="outrasColunas"></th>
                        <th class="colunaFornecedor"></th>
                        <th class="outrasColunas">Liberado</th>
                        <th class="outrasColunas">Em Trânsito</th>
                        <th class="outrasColunas">Chegada Hoje</th>
                        <th class="outrasColunas">Pendente</th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: materiais">
                    <tr>
                        <td data-bind="text: Material"></td>
                        <td data-bind="text: Fornecedor"></td>
                        <td class="colunaNumerica" data-bind="text: Globalize.format(QuantidadeLiberada,'n3')"></td>
                        <td class="colunaNumerica" data-bind="text: Globalize.format(QuantidadeEmTransito,'n3')"></td>
                        <td class="colunaNumerica" data-bind="text: Globalize.format(PrevisaoDeChegadaNoDia,'n3')"></td>
                        <td class="colunaNumerica" data-bind="text: Globalize.format(QuantidadePendente, 'n3')"></td>
                    </tr>
                </tbody>
            </table>
        </div>

        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryui")
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/globalize")
        @Scripts.Render("~/bundles/knockout")
        <script src="@Url.Content("~/Scripts/jquery.meio.mask.js")"></script>
        @*<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.loadmask.js")"></script>*@
        @Scripts.Render("~/bundles/scriptsgerais")
        <script src="@Url.Content("~/Scripts/Shared/autoCompleteDeMunicipio.js")"></script>

        <script type="text/javascript">
            
            function ConfiguracaoDoMonitor() {

                var me = this;

                me.idDoIntervaloDeAtualizacao = undefined;

                me.materiais = ko.observableArray([]);

                ko.applyBindings(me);
                
                me.atualizarMateriais = function(novosMateriais) {
                    me.materiais().length = 0;
                    $.each(novosMateriais, function(indice, material) {
                        me.materiais().push(material);
                    });
                    me.materiais.valueHasMutated();
                };

                me.executarConsulta = function (interValoDeAtualizacao) {

                    $.ajax({
                        url: '@Url.Action("Listar", "MonitorDeOrdemDeTransporte")' + '?DataInicial=' + $('[name=DataInicial]').val() + '&DataFinal=' + $('[name=DataFinal]').val(),
                        type: 'GET',
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json'
                    }).done(function (data) {
                        if (data.Sucesso) {
                            me.atualizarMateriais(data.Materiais);
                            if (interValoDeAtualizacao) {
                                me.idDoIntervaloDeAtualizacao = setInterval(me.executarConsulta,interValoDeAtualizacao * 1000);
                            }
                        } else {
                            Mensagem.ExibirMensagemDeErro(data.Mensagem);
                        }
                        })
                        .fail(function (jqXHR, textStatus, errorThrown) {
                            trataFalhaEmRequisicoesAjax(jqXHR);
                        });
                };


                me.recarregarDadosDoMonitor = function (interValoDeAtualizacao) {
                    var idDoIntervalo = me.idDoIntervaloDeAtualizacao;
                    if (idDoIntervalo) {
                        clearInterval(idDoIntervalo);
                    }

                    me.executarConsulta(interValoDeAtualizacao);

                };

            }

            var configuracaoDoMonitor = new ConfiguracaoDoMonitor();
            
            $(function () {
                
                criarAutoCompleteDeMunicipio('#CodigoDoMunicipioDeOrigem', '#NomeDoMunicipioDeOrigem');
                criarAutoCompleteDeMunicipio('#CodigoDoMunicipioDeDestino', '#NomeDoMunicipioDeDestino');

                aplicaMascaraInteiro();
                
                $.validator.unobtrusive.parse(".divFiltros");

                $('#btnAtualizarMateriais').click(function (e) {
                    e.preventDefault();
                    if (!$("#filtrosDoMonitor").validate().form()) {
                        return;
                    }
                    configuracaoDoMonitor.recarregarDadosDoMonitor(parseInt($('#InterValoDeAtualizacao').val()));
                });


                $('#btnOcultarConfiguracao').click(function (e) {
                    e.preventDefault();
                    $('.configuracaoDoMonitor').hide("drop", { direction: "up" }, "slow");
                });
                
                //$('#configuracaoDoMonitor').mouseleave(function() {
                //    $(this).toggle("slide", {direction:"drop"});
                //});

                $('#showDiv').mouseenter(function() {
                    $('.configuracaoDoMonitor').show("drop", { direction: "up" }, "slow");
                });

                //configuracaoDoMonitor.recarregarDadosDoMonitor(parseInt($('#InterValoDeAtualizacao').val()));

            });
        </script>
    </body>

</html>


