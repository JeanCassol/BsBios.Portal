@using BsBios.Portal.Common
@using BsBios.Portal.Domain.Entities
@{
    Layout = null;
    var tipoDeCotacao = (Enumeradores.TipoDeCotacao) ViewData["TipoDeCotacao"];
}
<style type="text/css">
     .separador {
         margin-top: 10px;
        background-color: #0095cd;
        color: white;
        font-weight: bold;
        font-size: 20px;
     }
 </style>
<div id="divFornecedores" class="divGrid">
    @Html.Hidden("CodigoProduto",ViewData["CodigoProduto"])
    @Html.Hidden("IdProcessoCotacao", ViewData["IdProcessoCotacao"])
    <div id="divFornecedoresParaSelecionar">
        <ul>
            <li>
                <a href="#divFornecedoresDoProduto">Fornecedores do Produto</a>
            </li>
            <li>
                <a href="#divFornecedoresGerais">Fornecedores Gerais</a>
            </li>
        </ul>
       
        <div id="divFornecedoresDoProduto">
            <div id="divGridFornecedoresDoProduto"></div>
        </div>

        <div id="divFornecedoresGerais">
            <div class="divFiltros">
                <fieldset>
                    <legend>Filtros</legend>
                    <div class="colunaFiltro">
                        @Html.Label("Código")
                        @Html.TextBox("CodigoFornecedorGeral","", new{@class="campomedio"})
                    </div>
                    <div class="colunaFiltro">
                        @Html.Label("Nome")
                        @Html.TextBox("NomeFornecedorGeral","", new{@class="campomedio"})
                    </div>
                    <div class="divBotao">
                        <input id="btnPesquisarFornecedorGeral" type="button" value="Pesquisar" class="blue"/>
                        <input id="btnLimparFornecedorGeral" type="button" value="Limpar" class="blue"/>
                    </div>
                </fieldset>
            </div>
            <div id="divGridFornecedoresGerais"></div>
        </div>
    </div>
    <div id="divFornecedoresSelecionados">
        <div class="separador">Fornecedores Selecionados</div>
        <div id="divGridFornecedoresSelecionados">
        </div>
    </div>

</div>

<script src="@Url.Content("~/Scripts/kendo/2012.3.1114/kendo.web.min.js")"></script>
<script src="@Url.Content("~/Scripts/kendo/2012.3.1114/kendo.grid.min.js")"></script>
<script src="@Url.Content("~/Scripts/Cadastro/gridFornecedor.js")"></script>
<script type="text/javascript">

    var fornecedoresSelecionados = [];
    var contadorDeRegistros = 0;
    function removerFornecedor(codigoFornecedor) {
        for (var i = 0; i < fornecedoresSelecionados.length; i++) {
            var fornecedor = fornecedoresSelecionados[i];
            if (fornecedor.Codigo == codigoFornecedor) {
                fornecedoresSelecionados.splice(i,1);
                break;
            }
        }
    }
    
    function adicionarFornecedor(fornecedor) {
        if (fornecedorSelecionado(fornecedor)) {
            return;
        }
        fornecedoresSelecionados.push(fornecedor);
    }
    
    function fornecedorSelecionado(fornecedor) {
        for (var i = 0; i < fornecedoresSelecionados.length; i++) {
            var fornecedorSelecionado = fornecedoresSelecionados[i];
            if (fornecedorSelecionado.Codigo == fornecedor.Codigo) {
                return  true;
            }
        }
        return false;
    }
    

    $(document).ready(function () {
        
        function atualizaGrid() {
            var grid = $("#divGridFornecedoresSelecionados").data("kendoGrid");
            grid.dataSource.read();

        }
    
        function selecionarFornecedorDoGrid(idDivGrid) {
            var grid = $(idDivGrid).data("kendoGrid");
            var dataItem = grid.dataItem(grid.select());
            if (dataItem.Email == undefined || dataItem.Email == null || dataItem.Email == '') {
                alert('Não é possível selecionar um fornecedor sem E-mail.');
                return;
            }
            adicionarFornecedor({
                Codigo: dataItem.Codigo, Nome: dataItem.Nome, Email: dataItem.Email,
                Cnpj: dataItem.Cnpj, Municipio: dataItem.Municipio, Uf: dataItem.Uf
            });
            atualizaGrid();
        }

        $('#divGridFornecedoresDoProduto').find('.button_add').die("click");
        $('#divGridFornecedoresDoProduto').find('.button_add').live("click", function () {
            selecionarFornecedorDoGrid('#divGridFornecedoresDoProduto');
        });

        $('#divGridFornecedoresGerais').find('.button_add').die("click");
        $('#divGridFornecedoresGerais').find('.button_add').live("click", function () {
            selecionarFornecedorDoGrid('#divGridFornecedoresGerais');
        });

        $('#divGridFornecedoresSelecionados').find('.button_remove').die('click');
        $('#divGridFornecedoresSelecionados').find('.button_remove').live('click', function () {
            var codigoFornecedor = $(this).attr('data-codigofornecedor');
            removerFornecedor(codigoFornecedor);
            atualizaGrid();
        });

        var codigoProduto = $('#CodigoProduto').val();
        var idProcessoCotacao = $('#IdProcessoCotacao').val();
        $.ajax({
            url: '@Url.Action("ListarFornecedores","ProcessoCotacaoMaterial")',
            type: 'GET',
            cache:false,
            data: {
                idProcessoCotacao: idProcessoCotacao
            },
            dataType: 'json',
            success: function (data) {
                $.each(data.Registros, function (indexInArray, valueOfElement) {
                    fornecedoresSelecionados.push(valueOfElement);
                });
                carregarGridDosFornecedoresSelecionados();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert('Ocorreu um erro ao consultar os Fornecedores Selecionados. Detalhe: ' + textStatus + errorThrown);
            }
        });
        
        $('#btnPesquisarFornecedorGeral').click(function () {
            $("#divGridFornecedoresGerais").data("kendoGrid").dataSource.read();
        });

        $('#btnLimparFornecedorGeral').click(function () {
            $('#divFornecedoresGerais input[type!=button]').val('');
        });


        GridFornecedor.CarregarGrid(codigoProduto, '#divGridFornecedoresDoProduto', '@Url.Action("FornecedoresDoProduto", "Produto")', true,
            function () { return { CodigoProduto: codigoProduto }; });
        GridFornecedor.CarregarGrid(codigoProduto, '#divGridFornecedoresGerais', '@Url.Action("FornecedoresGerais", "Fornecedor")', true,
        function () {
            var transportadora = '@(tipoDeCotacao == Enumeradores.TipoDeCotacao.Frete)'.boolean();
            return {
                
                CodigoProduto: codigoProduto, Transportadora: transportadora ,
                CodigoFornecedor: $('#CodigoFornecedorGeral').val(), NomeFornecedor: $('#NomeFornecedorGeral').val()
            };
        });
        
        function carregarGridDosFornecedoresSelecionados() {
            $('#divFornecedoresParaSelecionar').tabs();
            $('#divGridFornecedoresSelecionados').kendoGrid({
                dataSource: {
                    schema: {
                        data: function () { return fornecedoresSelecionados; },
                        model: {
                            id: 'Codigo',
                            fields: {
                                Codigo: { type: "string" },
                                Nome: { type: "string" },
                                Cnpj: { type: "string" },
                                Municipio: { type: "string" },
                                Uf: { type: "string" },
                                Email: { type: "string" }
                            }
                        }
                    }
                },
                sortable: false,
                selectable: 'row',
                columns:
                [
                    {
                        field: 'Codigo',
                        title: ' ', /*coloco um espaço para deixar o header sem título*/
                        width: 40,
                        sortable: false,
                        template: '<input type="button" class="button_remove" data-codigofornecedor="${Codigo}"></input>'
                    },
                    {
                        field: "Codigo",
                        width: 90,
                        title: "Código"
                    },
                    {
                        field: "Nome",
                        width: 200,
                        title: "Nome"
                    },
                    {
                        field: "Cnpj",
                        width: 150,
                        title: "CNPJ"
                    },
                    {
                        width: 250,
                        field: "Email",
                        title: "E-mail"
                    },
                    {
                        field: "Municipio",
                        width: 150,
                        title: "Município"
                    },
                    {
                        field: "Uf",
                        width: 20,
                        title: "UF"
                    }
                ]
            });

        }

    });
</script>
