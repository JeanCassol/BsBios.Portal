@using BsBios.Portal.UI.Helpers
@using BsBios.Portal.ViewModel
@model ProcessoCotacaoMaterialCadastroVm

@{
    ViewBag.TituloDaPagina = "Cotação de Material - Editar";
}
<div class="paginaCadastro">
    @using (Html.BeginForm("AtualizarProcesso", "ProcessoDeCotacaoService"))
    {

        <fieldset>
            <legend>Requisição de Compra</legend>

            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.CodigoMaterial)
            
            @if (Model != null && Model.RequisicaoDeCompraVm != null)
            {
                @Html.Partial("_RequisicaoDeCompra", Model.RequisicaoDeCompraVm)
            }
        </fieldset>
        <fieldset>
            <legend>Processo de Cotação</legend>
            @Html.LinhaComUmaColuna(new ColunaComLabel<ProcessoCotacaoMaterialCadastroVm, string>(x => x.DescricaoStatus))
            @Html.LinhaComUmaColuna(new ColunaComTextBox<ProcessoCotacaoMaterialCadastroVm, string>(x => x.DataLimiteRetorno,"campoDatePicker"))

        </fieldset>
            

            @*            @{ var comboMaterial = new ColunaComDropDown<ProcessoCotacaoMaterialCadastroVm, string>(x => x.CodigoMaterial, 
                ((List<ProdutoCadastroVm>) ViewBag.Materiais)
                .Select(x => new SelectListItem() {Text = x.Descricao, Value = Convert.ToString(x.CodigoSap), Selected = Model != null && x.CodigoSap == Model.CodigoMaterial}),
                "IdMaterial");

               var quantidadeMaterial = new ColunaComEditor<ProcessoCotacaoMaterialCadastroVm, int>(x => x.QuantidadeMaterial);
            }
            
            @Html.LinhaComDuasColunas(comboMaterial,quantidadeMaterial)
            
            @Html.LinhaComDuasColunas(new ColunaComTextBox<ProcessoCotacaoMaterialCadastroVm, string>(x => x.DataInicioLeilao, "campoDatePicker"),
            new ColunaComTextBox<ProcessoCotacaoMaterialCadastroVm, string>(x => x.DataTerminoLeilao, "campoDatePicker"))
            
            @Html.LinhaComDuasColunas(new ColunaComTextBox<ProcessoCotacaoMaterialCadastroVm, string>(x => x.DataValidadeCotacaoInicial, "campoDatePicker"),
            new ColunaComTextBox<ProcessoCotacaoMaterialCadastroVm, string>(x => x.DataValidadeCotacaoFinal, "campoDatePicker"))        

            @Html.LinhaComDuasColunas(new ColunaComTextArea<ProcessoCotacaoMaterialCadastroVm, string>(x => x.Requisitos),
            new ColunaComTextArea<ProcessoCotacaoMaterialCadastroVm, string>(x => x.Observacoes))*@
        
        <fieldset>
            <legend>Fornecedores</legend>
            <div class="divBotao">
                <input type="button" id="btnSelecionarFornecedores" value="Fornecedores" class="blue" style="width: 130px"/>
            </div>
            
            @Html.Partial("_CotacaoFornecedor", new ViewDataDictionary(){new KeyValuePair<string, object>("idProcessoCotacao", Model != null ? Model.Id : 0)})
        </fieldset>
           
        <div class="error">
            @if (ViewData["erro"] != null)
            {
                @ViewData["erro"]
            }
        </div>

        @Html.ValidationSummary(true)

        <div class="divBotao">
            <input type="button" id="btnIniciarProcesso" value="Iniciar" class="blue" />
            <input type="button" id="btnFecharProcesso" value="Fechar" class="blue" />
            <input type="submit" id="btnSalvarProcesso" value="Salvar" class="blue" />
        </div>
    }
    <div id="divSelecionarFornecedores"></div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="@Url.Content("~/Scripts/scriptsGerais.js")"></script>
    <script type="text/javascript">
        $(function() {
            var idProcessoCotacao = $('#Id').val();
            $('#divSelecionarFornecedores').dialog({
                autoOpen: false,
                width: 800,
                resizable: false,
                title: 'Selecionar Fornecedores',
                modal: true,
                buttons: {
                    "Confirmar": function() {
                        var codigosDosFornecedoresSelecionados = new Array();
                        $.each(fornecedoresSelecionados, function(indice, fornecedorSelecionado) {
                            codigosDosFornecedoresSelecionados.push(fornecedorSelecionado.Codigo);
                        });

                        $.ajax({
                            url: '@Url.Action("AtualizarFornecedores", "ProcessoDeCotacaoFornecedoresService")',
                            type: 'POST',
                            cache: false,
                            data: JSON.stringify({
                                IdProcessoCotacao: idProcessoCotacao,
                                CodigoFornecedoresSelecionados: codigosDosFornecedoresSelecionados
                            }),
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            success: function(data) {
                                if (data.Sucesso) {
                                    $('#divSelecionarFornecedores').dialog('close');
                                } else {
                                    Mensagem.ExibirMensagemDeErro(data.Mensagem);
                                }
                            },
                            error: function(jqXHR, textStatus, errorThrown) {
                                Mensagem.ExibirMensagemDeErro('Ocorreu um erro ao consultar os Fornecedores Selecionados. Detalhe: ' + textStatus + errorThrown);
                            }
                        });


                    },
                    "Cancelar": function() {
                        $(this).dialog("close");
                    }
                }
            });

            $('#btnSelecionarFornecedores').click(function() {
                $('#divSelecionarFornecedores').load("@Url.Action("SelecionarFornecedores")"
                    + "/?codigoProduto=" + $('#CodigoMaterial').val()
                    + "&idProcessoCotacao=" + $('#Id').val(),
                    function(response, status, xhr) {
                        $('#divSelecionarFornecedores').dialog('open');
                    });
                                @*                $('#divSelecionarFornecedores').html(@Html.Partial("_SelecionarFornecedor", new ViewDataDictionary()
                                                          {
                                                              {"codigoProduto", Model.CodigoMaterial}
                                                          }
                                                          ).ToHtmlString());
                $('#divSelecionarFornecedores').dialog('open');*@
            });

            $('#btnIniciarProcesso').click(function() {
                $.ajax({
                    url: '@Url.Action("AbrirProcesso", "ProcessoDeCotacaoStatusService")',
                    type: 'POST',
                    cache: false,
                    data: {idProcessoCotacao: $('#Id').val()},
                    dataType: 'json',
                    success: function(data) {
                        if (data.Sucesso) {
                            Mensagem.ExibirMensagemDeSucesso(data.Mensagem);
                        } else {
                            Mensagem.ExibirMensagemDeErro(data.Mensagem);
                        }
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        Mensagem.ExibirMensagemDeErro('Ocorreu um erro ao abrir o Processo. Detalhe: ' + textStatus + errorThrown);
                    }
                });

            });

            $('#btnFecharProcesso').click(function() {
                $.ajax({
                    url: '@Url.Action("FecharProcesso", "ProcessoDeCotacaoStatusService")',
                    type: 'POST',
                    cache: false,
                    data: { idProcessoCotacao: $('#Id').val() },
                    dataType: 'json',
                    success: function (data) {
                        if (data.Sucesso) {
                            Mensagem.ExibirMensagemDeSucesso(data.Mensagem);
                        } else {
                            Mensagem.ExibirMensagemDeErro(data.Mensagem);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        Mensagem.ExibirMensagemDeErro('Ocorreu um erro ao fechar o Processo. Detalhe: ' + textStatus + errorThrown);
                    }
                });

            });
        });
    </script>
}
