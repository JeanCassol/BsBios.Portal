@using BsBios.Portal.Common
@using BsBios.Portal.UI.Helpers
@using BsBios.Portal.ViewModel
@model ProcessoCotacaoMaterialCadastroVm

@{
    ViewBag.TituloDaPagina = "Processo de Cotação de Material";
    string displayStyle = Model == null ? "none" : "inherit";
}
<link href="@Url.Content("~/Content/kendo/2012.3.1114/kendo.common.min.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/kendo/2012.3.1114/kendo.default.min.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/jquery.loadmask.css")" rel="stylesheet" />

<div class="paginaCadastro">
    @using (Html.BeginForm("AtualizarProcesso", "ProcessoDeCotacaoService"))
    {
        @Html.HiddenFor(model => model.Id)
        
        <fieldset>
            <legend>Processo de Cotação</legend>
            <div class="coluna">
                @Html.Label("Status:",new{@class="labelNaLinha"})
                <span id="spanStatus">@(Model != null ? Model.DescricaoStatus : "Não Iniciado")</span> 
            </div>
            @Html.LinhaComDuasColunas(new ColunaComTextBox<ProcessoCotacaoMaterialCadastroVm, string>(x => x.DataLimiteRetorno,"campoDatePicker maskdata"),
                                      new ColunaComTextArea<ProcessoCotacaoMaterialCadastroVm, string>(x => x.Requisitos))
            <div id="divErro" class="error"></div>
            <div class="divBotao">
                <input type="button" id="btnSalvarProcesso" value="Salvar" class="blue" />
            </div>
        </fieldset>

    }
    <div id="divOutrasOperacoes" style="display: @displayStyle">
        <div id="divSelecionarItens" class="janelaModal" ></div>
    
        <fieldset>
            <legend>Itens</legend>
            <div class="divBotao">
                <input type="button" id="btnSelecionarItens" value="Selecionar Itens" class="blue botaoMedio"/>
            </div>
            <div id="divGridItens" class="divGrid"></div>
        </fieldset>


        @Html.Partial("_ProcessoDeCotacaoOperacoes", new ViewDataDictionary() 
            {   new KeyValuePair<string, object>("idProcessoCotacao", Model != null ? Model.Id : 0),
                new KeyValuePair<string, object>("TipoDeCotacao", Enumeradores.TipoDeCotacao.Material),
                new KeyValuePair<string, object>("UrlEnviarEmail", Url.Action("EnviarEmailDeAbertura","ProcessoDeCotacaoDeMaterialEmail")),
                new KeyValuePair<string, object>("ExibirBotacaoSelecionarCotacao", false)
            })
        <fieldset>
            <legend>Enviar Anexos</legend>
            <form action="/api/upload/upload" enctype="multipart/form-data">
                <div>
                    <input type="file" id="fileupload" name="fileupload" accept="*" multiple="multiple"/>
                </div>
                <div @*class="well hide"*@ id="filelistholder"></div>
                <div class="divBotao">
                    <input type="button" id="btnEnviarArquivos" class="blue" value="Enviar"/>
                </div>
                <div id="divUploadErro" class="message-error"></div>
            </form>
        </fieldset>
        <fieldset>
            <legend>Anexos Enviados</legend>
            <div id="divAnexos" class="divGrid"></div>            
        </fieldset>
    </div>

</div>
<div id="divVisualizarCotacaoDoFornecedor" class="janelaModal"></div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/fileupload")
    <script type="text/javascript" src="@Url.Content("~/Scripts/kendo/2012.3.1114/kendo.web.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/kendo/2012.3.1114/kendo.grid.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.maskedinput.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.meio.mask.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.loadmask.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/ProcessoDeCotacao/ProcessoDeCotacaoItensGrid.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/ProcessoDeCotacao/SelecionarItens.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/ProcessoDeCotacao/CotacaoDoFornecedorResumido.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/ProcessoDeCotacao/ProcessoDeCotacaoOperacoes.js")"></script>
    <script src="@Url.Content("~/Scripts/ProcessoDeCotacao/ProcessoDeCotacaoAnexo.js")"></script>
    <script type="text/javascript">
        $(function() {
            aplicaMascaraData();
            var idProcessoCotacao = '@(Model != null ? Model.Id : 0)';
            /// <param name="configuracao.schemaData" type="string">Nome da propriedade json que contém o array de registros ou uma função que retorne um array de registros</param>
            /// <param name="configuracao.transportUrl" type="string">Url de leitura dos dados. Não deve ser informado quando utilizar um array local</param>
            /// <param name="configuracao.transportData" type="string">Função que gera os filtros para que serão passados para a action que filtra os dados</param>
            /// <param name="configuracao.renderTo">elemento html que o grid deve ser renderizado</param>
            /// <param name="configuracao.exibirBotaoAdicionar">indica se deve ser exibida uma coluna com botão "Adicionar" para cada registro do grid</param>
            /// <param name="configuracao.exibirBotaoRemover">indica se deve ser exibida uma coluna com botão "Remover" para cada registro do grid</param>
            /// <param name="configuracao.pageable">true = para paginar o gride; false = para não paginar o grid</param>

            ProcessoDeCotacaoItensGrid.configurar({
                schemaData: 'Registros',
                transportUrl: UrlPadrao.ListarItensDoProcessoDeCotacao + '/?idProcessoCotacao='+ idProcessoCotacao,
                renderTo: '#divGridItens',
                exibirDetalhesDaRequisicao: true,
                exibirBotaoSelecionarCotacao: true,
                exibirBotaoAdicionar: false,
                exibirBotaoRemover: false,
                pageable: false
            });
            SelecionarItens.ConfigurarJanelaModal();
            GridCotacaoResumida.Configurar({ Url: UrlPadrao.CotacaoDeMaterialResumida, IdProcessoCotacao: idProcessoCotacao, ExibirBotaoVisualizar: true });
            ProcessoDeCotacaoOperacoes.Configurar('@((int) Enumeradores.TipoDeCotacao.Material)');
            GridAnexo.Configurar(idProcessoCotacao, "#divAnexos", true);

            $('#divGridItens').off('click', '.button_select', false);
            $('#divGridItens').on('click','.button_select', function () {
                var grid = $('#divGridItens').data("kendoGrid");
                var dataItem = grid.dataItem(grid.select());
                $('#divSelecionarCotacoes').customLoad({url:UrlPadrao.AbrirTelaDeSelecaoDeCotacoesDeMaterial
                    + "/?idProcessoCotacaoItem=" + dataItem.IdProcessoCotacaoItem});
            });
            
            $('#divVisualizarCotacaoDoFornecedor').customDialog({
                title: 'Cotações do Fornecedor',
                width: 815
            });

            $("#gridCotacaoFornecedor").find('.button_visualize').die("click");
            $("#gridCotacaoFornecedor").find('.button_visualize').live("click", function() {
                var grid = $("#gridCotacaoFornecedor").data("kendoGrid");
                var dataItem = grid.dataItem($(this).parents('tr:first'));
                $('#divVisualizarCotacaoDoFornecedor').customLoad({url:'@Url.Action("ConsultarCadastro","CotacaoMaterial")'
                + '?idProcessoCotacao=' + $('#Id').val()
                + '&codigoFornecedor=' + dataItem.Codigo});

            });

            $('#btnSalvarProcesso').click(function () {
                $('#divErro').empty();
                var form = $('form');
                if (!$(form).validate().form()) {
                    return;
                }

                var formData = $(form).serialize();
                $.post('@Url.Action("AtualizarProcesso","ProcessoDeCotacaoService" )', formData,
                    function (data) {
                        if (data.Sucesso) {
                            $('#Id').val(data.IdProcessoCotacao);
                            $('#divOutrasOperacoes').show();
                            Mensagem.ExibirMensagemDeErro("O Processo de Cotação foi salvo com sucesso.");
                            
                        } else {
                            atualizaMensagemDeErro(data.Mensagem);
                        }
                    });
            });
            
            $('#fileupload').fileupload({
                dataType: "json",
                url: "/api/upload/upload",
                limitConcurrentUploads: 1,
                singleFileUploads: false,
                sequentialUploads: true,
                formData: { IdProcessoCotacao: $('#Id').val() },
                add: function (e, data) {
                    $.each(data.files, function (indice, arquivo) {
                        if (arquivo.size > 4000000) {
                            $('#divUploadErro').append('O arquivo ' + arquivo.name + ' ultrapassou o tamanho máximo permitido de 4 MB.');
                            return;
                        }
                        data.context = $('<div />').text(arquivo.name).appendTo('#filelistholder');
                        $('#btnEnviarArquivos').bind('click.uploadsubmit', function () {
                            data.submit();
                        });
                    });
                },
                done: function (e, data) {
                    data.context.text(data.files[0].name + '... Concluído');
                },
                fail: function (e, data) {
                    if (data.messages.uploadedBytes) {
                        $('#divUploadErro').html(data.messages.uploadedBytes);
                    } else {
                        $('#divUploadErro').html(data.jqXHR.responseText.replace('\r\n', '<br/>'));
                    }
                },
                always: function (e, data) {
                    $('#filelistholder').empty();
                    GridAnexo.Atualizar();
                },
                stop: function(e) {
                    $('#btnEnviarArquivos').unbind('click.uploadsubmit');
                }
            });
        })
    </script>
}
