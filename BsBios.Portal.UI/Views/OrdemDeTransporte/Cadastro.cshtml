@using BsBios.Portal.Common
@using BsBios.Portal.UI.Helpers
@using BsBios.Portal.ViewModel
@model OrdemDeTransporteCadastroVm
<link href="@Url.Content("~/Content/kendo/2012.3.1114/kendo.common.min.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/kendo/2012.3.1114/kendo.default.min.css")" rel="stylesheet" />

@{
    ViewBag.TituloDaPagina = "Ordem de Transporte";
}

<div class="paginaCadastro">
    @{
        Html.RenderPartial("_CabecalhoDoProcessoDeCotacaoDeFrete", Model.Cabecalho);
    }
        
    @using(Html.BeginForm())       
    {
        <fieldset>
            <legend>Ordem de Transporte</legend>
            @Html.HiddenFor(model => model.Id)

            @Html.LinhaComUmaColuna(new ColunaComLabel<OrdemDeTransporteCadastroVm, int>(x => x.Id))
            @{
                Coluna<OrdemDeTransporteCadastroVm, decimal> campoDeQuantidadeLiberada;
                Coluna<OrdemDeTransporteCadastroVm, decimal> campoDeTolerancia;

                if (Model.PermiteAlterar)
                {
                    campoDeQuantidadeLiberada = new ColunaComTextBox<OrdemDeTransporteCadastroVm, decimal>(x => x.QuantidadeLiberada, "maskquantidade");
                    campoDeTolerancia = new ColunaComTextBox<OrdemDeTransporteCadastroVm, decimal>(x => x.QuantidadeDeTolerancia, "maskquantidade");
                }
                else
                {
                    campoDeQuantidadeLiberada = new ColunaComLabel<OrdemDeTransporteCadastroVm, decimal>(x => x.QuantidadeLiberada,Constantes.FormatoDeCampoDeQuantidade);
                    campoDeTolerancia = new ColunaComLabel<OrdemDeTransporteCadastroVm, decimal>(x => x.QuantidadeDeTolerancia, Constantes.FormatoDeCampoDeQuantidade);
                }
                
            }

            @Html.LinhaComUmaColuna(new ColunaComLabel<OrdemDeTransporteCadastroVm, string>(x => x.Transportadora))
            @Html.LinhaComDuasColunas(campoDeQuantidadeLiberada,campoDeTolerancia)
            @Html.LinhaComDuasColunas(new ColunaComLabelEmDestaque<OrdemDeTransporteCadastroVm, decimal>(x => x.QuantidadeColetada, "lblQuantidadeColetada", Constantes.FormatoDeCampoDeQuantidade),
             new ColunaComLabelEmDestaque<OrdemDeTransporteCadastroVm, decimal>(x => x.QuantidadeRealizada, "lblQuantidadeRealizada", Constantes.FormatoDeCampoDeQuantidade))
                
            @if (Model.PermiteAlterar)
            {
                <div class="divBotao">
                    <input type="button" id="btnSalvarOrdemDeTransporte" value="Salvar" class="blue" />
                </div>
            }

        </fieldset>
        <fieldset>
            <legend>Coletas Realizadas</legend>
            @if (Model.PermiteAdicionarColeta)
            {
                <div class="divBotao">
                    <input type="button" id="btnAdicionarColeta" value="Adicionar" class="blue" />
                </div>
            }
            <div>
                <div id="gridColetas" class="divGrid"></div>
            </div>

        </fieldset>
        
        <div id="divCadastroColeta" class="janelaModal"></div>

    }
</div>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/scriptsgerais")
    <script src="@Url.Content("~/Scripts/kendo/2012.3.1114/kendo.web.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2012.3.1114/kendo.grid.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.maskedinput.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.meio.mask.js")"></script>
    <script type="text/javascript">

        $(function() {
            aplicaMascaraQuantidade();


            $('#btnSalvarOrdemDeTransporte').click(function() {
                var form = $('form');
                if (!$(form).validate().form()) {
                    return;
                }

                var formData = $(form).serialize();
                $.post('@Url.Action("SalvarOrdem", "OrdemDeTransporteService")', formData,
                    function(data) {
                        if (data.Sucesso) {
                            Mensagem.ExibirMensagemDeSucesso(data.Mensagem);
                        } else {
                            Mensagem.ExibirMensagemDeErro(data.Mensagem);
                        }
                    })
                    .fail(function(jqXHR, textStatus, errorThrown) {
                        Mensagem.ExibirMensagemDeErro(errorThrown);
                    });

            });

            var permiteAdicionarColeta = '@Model.PermiteAdicionarColeta'.boolean();

            var colunas;
            if (permiteAdicionarColeta) {
                colunas = [
                    {
                        title: ' ',
                        width: 40,
                        sortable: false,
                        template: '<input type="button" class="button_edit"></input>'
                    },
                    {
                        title: ' ',
                        width: 40,
                        sortable: false,
                        template: '<input type="button" class="button_remove"></input>'
                    }
                ];
            } else {
                colunas = [
                    {
                        title: ' ',
                        width: 40,
                        sortable: false,
                        template: '<input type="button" class="button_visualize"></input>'
                    }
                ];
            }

            colunas = colunas.concat(
                {
                    width: 120,
                    field: "DataDaColeta",
                    title: "Data da Coleta"
                },
                {
                    field: "Placa",
                    width: 80,
                    title: "Placa"
                }, {
                    field: "Motorista",
                    width: 200,
                    title: "Motorista"
                },
                {
                    width: 80,
                    field: "Peso",
                    title: "Quantidade",
                    format:"{0:n2}"
                },
                {
                    width: 120,
                    field: "DataDePrevisaoDeChegada",
                    title: "Previsão de Chegada"
                },
                {
                    width: 80,
                    field: "Realizado",
                    title: "Realizado"
                }
            );


            $("#gridColetas").customKendoGrid({
                dataSource: {
                    schema: {
                        data: 'Registros',
                        model: {
                            id: 'Id',
                            fields: {
                                Id: { type: "number" },
                                Placa: { type: "string" },
                                Motorista: { type: "string" },
                                Quantidade: { type: "number" },
                                DataDePrevisaoDeChegada: { type: "string" },
                                Realizado: { type: "string" }
                            }
                        },
                        total: 'QuantidadeDeRegistros',
                        type: 'json'
                    },
                    transport: {
                        read: {
                            url: '@Url.Action("ListarColetas", "OrdemDeTransporte")',
                            type: 'GET',
                            cache: false,
                            data: function() {
                                return {
                                    IdDaOrdemDeTransporte: $('#Id').val()
                                };
                            }
                        }
                    }
                },
                scrollable: true,
                columns: colunas
            });

            var functionEditarColeta = function() {
                var coletaSelecionada = $('#gridColetas').data('kendoGrid').obterRegistroSelecionado();
                $('#divCadastroColeta').customLoad('@Html.Raw(Url.Action("EditarColeta", "OrdemDeTransporte"))' +
                    '?idDaOrdemDeTransporte=' + coletaSelecionada.IdDaOrdemDeTransporte + '&idDaColeta=' + coletaSelecionada.IdColeta,
                    function() {
                        jQuery.validator.unobtrusive.parse('#divCadastroColeta');
                    });
            };

            var funcaoParaRemoverColeta = function() {
                Mensagem.ExibirMensagemDeConfirmacao("Confirma a exclusão da Coleta e todas as suas Notas Fiscais?", function () {
                    var gridColeta = $('#gridColetas').data('kendoGrid');
                    var coletaSelecionada = gridColeta.obterRegistroSelecionado();
                    $.ajax({
                        url: '@Url.Action("RemoverColeta", "OrdemDeTransporteService")',
                        type: 'POST',
                        data: JSON.stringify({idDaOrdemDeTransporte: coletaSelecionada.IdDaOrdemDeTransporte, idDaColeta: coletaSelecionada.IdColeta }),
                        cache: false,
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        success: function (data) {
                            if (data.Sucesso) {
                                $('#lblQuantidadeColetada').text(Globalize.format(data.QuantidadeColetada, 'n3'));
                                gridColeta.dataSource.read();
                            } else {
                                Mensagem.ExibirMensagemDeErro(data.Mensagem);
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            Mensagem.ExibirMensagemDeErro('Ocorreu um erro ao remover a Coleta. Detalhe: ' + textStatus + errorThrown);
                        }
                    });

                });
            };

            $("#gridColetas").off('click', '.button_edit');
            $("#gridColetas").off('click', '.button_visualize');
            $("#gridColetas").off('click', '.button_remove');

            $("#gridColetas").on("click", '.button_edit', functionEditarColeta);
            $("#gridColetas").on("click", '.button_visualize', functionEditarColeta);
            $("#gridColetas").on("click", '.button_remove', funcaoParaRemoverColeta);


            $('#divCadastroColeta').customDialog({
                title: 'Cadastrar Coleta',
                buttons: [{
                        text: "Salvar",
                        click: function() {

                            var form = $('#formColeta');
                            if (!$(form).validate().form()) {
                                return;
                            }

                            var formData = $(form).serializeObject();
                            formData.IdDaOrdemDeTransporte = $('#Id').val();
                            formData.NotasFiscais = GridNotasFiscais.NotasFiscais();


                            $.ajax({
                                url: '@Url.Action("SalvarColeta", "OrdemDeTransporteService")',
                                type: 'POST',
                                data: JSON.stringify(formData),
                                cache: false,
                                contentType: "application/json; charset=utf-8",
                                dataType: 'json',
                                success: function(data) {
                                    if (data.Sucesso) {
                                        $('#divCadastroColeta').dialog("close");
                                        $('#lblQuantidadeColetada').text(Globalize.format(data.QuantidadeColetada, 'n3'));
                                        var grid = $("#gridColetas").data("kendoGrid");
                                        grid.dataSource.read();
                                    } else {
                                        Mensagem.ExibirMensagemDeErro(data.Mensagem);
                                    }
                                },
                                error: function(jqXHR, textStatus, errorThrown) {
                                    Mensagem.ExibirMensagemDeErro('Ocorreu um erro ao salvar a Coleta. Detalhe: ' + textStatus + errorThrown);
                                }
                            });


                        }/*
                    mousemove: function () {
                            $(this).removeClass("ui-state-hover");
                        }*/
                        
                    },
                    {
                        text: "Cancelar",
                        click: function() {
                            $(this).dialog("close");
                        }
                    }]
            });

            $('#btnAdicionarColeta').click(function() {
                var divCadastroColeta = $('#divCadastroColeta');
                $(divCadastroColeta).customLoad('@Html.Raw(Url.Action("NovaColeta", "OrdemDeTransporte", new {Model.Cabecalho.UnidadeDeMedida}))',
                    function() {
                        $(divCadastroColeta).find('#UnidadeDeMedida').val('@Html.Raw(HttpUtility.JavaScriptStringEncode(Model.Cabecalho.UnidadeDeMedida))');
                        $(divCadastroColeta).find('#PrecoUnitario').val(Globalize.format(Globalize.parseFloat('@Model.PrecoUnitario'), 'n2'));
                        $(divCadastroColeta).find('#CnpjDoEmitente').val(Formato.formataCnpj('@Model.Cabecalho.CnpjDoFornecedorDaMercadoria'));
                        $(divCadastroColeta).find('#NomeDoEmitente').val('@Html.Raw(HttpUtility.JavaScriptStringEncode(Model.Cabecalho.NomeDoFornecedorDaMercadoria))');
                        $(divCadastroColeta).find('#NumeroDoContrato').val('@Model.Cabecalho.NumeroDoContrato');
                        $(divCadastroColeta).find('#NomeDaTransportadora').val('@Model.Transportadora');
                        
                        jQuery.validator.unobtrusive.parse('#divCadastroColeta');
                    });

            });

        });
    </script>
}


